generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  password  String
  firstName String?
  lastName  String?
  image     String?
  role      Role
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Facility  Facility[]
  Provider  Provider[]
}

model Provider {
  id          String    @id @default(cuid())
  firstName   String?
  lastName    String?
  imageURL    String?
  email       String    @unique
  credentials String?
  npiNumber   String?
  userId      String
  healthcare  Boolean   @default(false)
  facilityId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      Status    @default(active)
  facility    Facility? @relation(fields: [facilityId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model Facility {
  id             String     @id @default(cuid())
  userId         String
  address        String
  city           String
  email          String     @unique
  state          String
  zip            String
  phone          String
  primaryContact String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime?  @updatedAt
  firstName      String?
  lastName       String?
  user           User       @relation(fields: [userId], references: [id])
  patients       Patient[]
  providers      Provider[]
}

model Patient {
  id                  String       @id @default(cuid())
  firstName           String
  slug                String       @unique
  lastName            String
  dob                 DateTime
  gender              String
  status              Status       @default(active)
  facilityId          String?
  KetissuedOn         DateTime?
  KetexpiresOn        DateTime?
  race                String
  email               String
  thcInteraction      Boolean?     @default(false)
  cbdInteraction      Boolean?     @default(false)
  ketamineInteraction Boolean?     @default(false)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime?    @updatedAt
  assessmentData      Json?
  alerts              Alert[]
  medications         Medication[]
  notes               Note[]
  facility            Facility?    @relation(fields: [facilityId], references: [id])
}

model Note {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  patientId String
  title     String
  patient   Patient  @relation(fields: [patientId], references: [id])
}

model Alert {
  id          String  @id @default(cuid())
  title       String
  description String
  patientId   String
  patient     Patient @relation(fields: [patientId], references: [id])
}

model Medication {
  id           String  @id @default(cuid())
  medicationId Int
  name         String
  patientId    String
  patient      Patient @relation(fields: [patientId], references: [id])
}

enum Status {
  active
  inactive
}

enum Role {
  FACILITY
  PROVIDER
}
